query_layer.shape: torch.Size([5, 32, 160])
query_layer: tensor([[[-0.5708, -0.3062,  0.4709,  ..., -0.0871,  0.2756,  0.5122],
         [ 0.0148, -0.5352, -0.4048,  ..., -0.3999, -0.1879,  0.0619],
         [-0.7510,  0.5103, -0.6758,  ..., -0.4939, -1.1924,  0.2676],
         ...,
         [ 0.4553,  0.4016,  0.2634,  ...,  0.1831, -0.6973, -0.1002],
         [-0.3225,  0.0383, -0.7495,  ..., -0.0826, -0.5723, -1.4160],
         [-0.7476,  0.4053, -0.9521,  ..., -0.8994,  1.6582,  0.9863]],

        [[-0.4294, -0.2939,  1.0078,  ..., -0.0871,  0.2756,  0.5122],
         [ 0.5806, -0.0227, -0.0703,  ..., -0.3999, -0.1879,  0.0619],
         [ 0.2024,  0.1705, -0.4480,  ..., -0.4939, -1.1924,  0.2676],
         ...,
         [ 0.2593,  0.1741,  0.5908,  ...,  0.1831, -0.6973, -0.1002],
         [-0.3423,  0.6660, -0.6782,  ..., -0.0826, -0.5723, -1.4160],
         [-0.4309,  0.3408, -0.3352,  ..., -0.8994,  1.6582,  0.9863]],

        [[ 0.1071, -0.0689,  0.9717,  ..., -0.0870,  0.2756,  0.5122],
         [ 0.6123,  0.5063,  0.3042,  ..., -0.3999, -0.1877,  0.0618],
         [ 0.9697, -0.2927,  0.0345,  ..., -0.4939, -1.1924,  0.2676],
         ...,
         [-0.1752, -0.1796,  0.5830,  ...,  0.1830, -0.6973, -0.1001],
         [-0.0474,  0.8110, -0.2214,  ..., -0.0827, -0.5723, -1.4160],
         [ 0.2822,  0.0296,  0.4727,  ..., -0.8994,  1.6582,  0.9863]],

        [[ 0.5449,  0.2062,  0.3848,  ..., -0.0870,  0.2754,  0.5122],
         [ 0.0815,  0.6689,  0.5059,  ..., -0.3999, -0.1877,  0.0618],
         [ 0.8457, -0.5439,  0.4971,  ..., -0.4939, -1.1924,  0.2678],
         ...,
         [-0.4487, -0.4033,  0.2441,  ...,  0.1830, -0.6973, -0.1001],
         [ 0.2910,  0.3694,  0.3608,  ..., -0.0827, -0.5723, -1.4160],
         [ 0.7358, -0.3030,  1.0117,  ..., -0.8994,  1.6582,  0.9863]],

        [[ 0.4819,  0.3318, -0.4209,  ..., -0.0870,  0.2754,  0.5122],
         [-0.5249,  0.3467,  0.4204,  ..., -0.3999, -0.1877,  0.0618],
         [-0.0564, -0.4014,  0.6772,  ..., -0.4939, -1.1924,  0.2678],
         ...,
         [-0.3096, -0.3347, -0.2333,  ...,  0.1830, -0.6973, -0.1001],
         [ 0.3621, -0.3401,  0.7383,  ..., -0.0828, -0.5723, -1.4160],
         [ 0.5127, -0.4163,  0.9761,  ..., -0.8994,  1.6582,  0.9863]]],
       dtype=torch.float16, grad_fn=<AddBackward0>)
key_layer.shape: torch.Size([5, 32, 160])
key_layer: tensor([[[ 0.0363, -0.0155, -1.0146,  ...,  0.1682,  1.0693,  0.2832],
         [ 0.0705,  0.4536, -0.6025,  ..., -1.0020,  0.0166, -0.7236],
         [ 0.1672,  0.4094,  0.4961,  ...,  0.1550,  0.6465, -0.1376],
         ...,
         [-0.9414, -0.0872, -0.2089,  ..., -0.9214,  0.8882,  0.1345],
         [-0.4790,  0.1956, -0.2837,  ...,  1.1230, -0.7910, -0.0831],
         [ 0.4204,  0.2100, -0.6455,  ..., -0.7471,  0.1672, -1.0654]],

        [[ 0.6016, -0.4275, -1.2598,  ...,  0.1682,  1.0693,  0.2832],
         [-0.0362,  0.7432,  0.1021,  ..., -1.0020,  0.0165, -0.7236],
         [ 0.2668, -0.0081,  0.6270,  ...,  0.1550,  0.6465, -0.1376],
         ...,
         [-0.3140, -0.0187, -0.0639,  ..., -0.9214,  0.8882,  0.1345],
         [-0.1516,  0.4194, -0.6548,  ...,  1.1230, -0.7910, -0.0831],
         [ 0.0664,  0.1621, -0.3477,  ..., -0.7471,  0.1672, -1.0654]],

        [[ 0.6138, -0.5298, -0.7896,  ...,  0.1682,  1.0693,  0.2832],
         [-0.1097,  0.4941,  0.7490,  ..., -1.0020,  0.0165, -0.7236],
         [ 0.1209, -0.4197,  0.4019,  ...,  0.1552,  0.6465, -0.1376],
         ...,
         [ 0.6025,  0.0634,  0.1175,  ..., -0.9214,  0.8882,  0.1345],
         [ 0.3154,  0.3394, -0.6543,  ...,  1.1230, -0.7910, -0.0831],
         [-0.3491, -0.0032,  0.1476,  ..., -0.7471,  0.1672, -1.0654]],

        [[ 0.0618, -0.2489,  0.1279,  ...,  0.1682,  1.0693,  0.2832],
         [-0.0823, -0.1123,  0.9707,  ..., -1.0020,  0.0165, -0.7236],
         [-0.1361, -0.5273, -0.0510,  ...,  0.1552,  0.6465, -0.1376],
         ...,
         [ 0.9648,  0.0996,  0.2321,  ..., -0.9214,  0.8882,  0.1345],
         [ 0.4924,  0.0138, -0.2825,  ...,  1.1230, -0.7910, -0.0831],
         [-0.4434, -0.1661,  0.5591,  ..., -0.7471,  0.1672, -1.0654]],

        [[-0.5474,  0.2126,  0.9736,  ...,  0.1682,  1.0693,  0.2832],
         [ 0.0208, -0.6372,  0.6411,  ..., -1.0020,  0.0165, -0.7236],
         [-0.2678, -0.2534, -0.4753,  ...,  0.1553,  0.6465, -0.1376],
         ...,
         [ 0.4404,  0.0636,  0.2148,  ..., -0.9214,  0.8882,  0.1344],
         [ 0.2166, -0.3218,  0.2499,  ...,  1.1230, -0.7910, -0.0831],
         [-0.1301, -0.2087,  0.6528,  ..., -0.7471,  0.1671, -1.0654]]],
       dtype=torch.float16, grad_fn=<AddBackward0>)
attn_weights.shape: torch.Size([1, 32, 5, 5])
attn_weights: tensor([[[[-65504., -65504., -65504., -65504., -65504.],
          [-65504., -65504., -65504., -65504., -65504.],
          [-65504., -65504., -65504., -65504., -65504.],
          [-65504., -65504., -65504., -65504., -65504.],
          [-65504., -65504., -65504., -65504., -65504.]],

         [[-65504., -65504., -65504., -65504., -65504.],
          [-65504., -65504., -65504., -65504., -65504.],
          [-65504., -65504., -65504., -65504., -65504.],
          [-65504., -65504., -65504., -65504., -65504.],
          [-65504., -65504., -65504., -65504., -65504.]],

         [[-65504., -65504., -65504., -65504., -65504.],
          [-65504., -65504., -65504., -65504., -65504.],
          [-65504., -65504., -65504., -65504., -65504.],
          [-65504., -65504., -65504., -65504., -65504.],
          [-65504., -65504., -65504., -65504., -65504.]],

         [[-65504., -65504., -65504., -65504., -65504.],
          [-65504., -65504., -65504., -65504., -65504.],
          [-65504., -65504., -65504., -65504., -65504.],
          [-65504., -65504., -65504., -65504., -65504.],
          [-65504., -65504., -65504., -65504., -65504.]],

         [[-65504., -65504., -65504., -65504., -65504.],
          [-65504., -65504., -65504., -65504., -65504.],
          [-65504., -65504., -65504., -65504., -65504.],
          [-65504., -65504., -65504., -65504., -65504.],
          [-65504., -65504., -65504., -65504., -65504.]],

         [[-65504., -65504., -65504., -65504., -65504.],
          [-65504., -65504., -65504., -65504., -65504.],
          [-65504., -65504., -65504., -65504., -65504.],
          [-65504., -65504., -65504., -65504., -65504.],
          [-65504., -65504., -65504., -65504., -65504.]],

         [[-65504., -65504., -65504., -65504., -65504.],
          [-65504., -65504., -65504., -65504., -65504.],
          [-65504., -65504., -65504., -65504., -65504.],
          [-65504., -65504., -65504., -65504., -65504.],
          [-65504., -65504., -65504., -65504., -65504.]],

         [[-65504., -65504., -65504., -65504., -65504.],
          [-65504., -65504., -65504., -65504., -65504.],
          [-65504., -65504., -65504., -65504., -65504.],
          [-65504., -65504., -65504., -65504., -65504.],
          [-65504., -65504., -65504., -65504., -65504.]],

         [[-65504., -65504., -65504., -65504., -65504.],
          [-65504., -65504., -65504., -65504., -65504.],
          [-65504., -65504., -65504., -65504., -65504.],
          [-65504., -65504., -65504., -65504., -65504.],
          [-65504., -65504., -65504., -65504., -65504.]],

         [[-65504., -65504., -65504., -65504., -65504.],
          [-65504., -65504., -65504., -65504., -65504.],
          [-65504., -65504., -65504., -65504., -65504.],
          [-65504., -65504., -65504., -65504., -65504.],
          [-65504., -65504., -65504., -65504., -65504.]],

         [[-65504., -65504., -65504., -65504., -65504.],
          [-65504., -65504., -65504., -65504., -65504.],
          [-65504., -65504., -65504., -65504., -65504.],
          [-65504., -65504., -65504., -65504., -65504.],
          [-65504., -65504., -65504., -65504., -65504.]],

         [[-65504., -65504., -65504., -65504., -65504.],
          [-65504., -65504., -65504., -65504., -65504.],
          [-65504., -65504., -65504., -65504., -65504.],
          [-65504., -65504., -65504., -65504., -65504.],
          [-65504., -65504., -65504., -65504., -65504.]],

         [[-65504., -65504., -65504., -65504., -65504.],
          [-65504., -65504., -65504., -65504., -65504.],
          [-65504., -65504., -65504., -65504., -65504.],
          [-65504., -65504., -65504., -65504., -65504.],
          [-65504., -65504., -65504., -65504., -65504.]],

         [[-65504., -65504., -65504., -65504., -65504.],
          [-65504., -65504., -65504., -65504., -65504.],
          [-65504., -65504., -65504., -65504., -65504.],
          [-65504., -65504., -65504., -65504., -65504.],
          [-65504., -65504., -65504., -65504., -65504.]],

         [[-65504., -65504., -65504., -65504., -65504.],
          [-65504., -65504., -65504., -65504., -65504.],
          [-65504., -65504., -65504., -65504., -65504.],
          [-65504., -65504., -65504., -65504., -65504.],
          [-65504., -65504., -65504., -65504., -65504.]],

         [[-65504., -65504., -65504., -65504., -65504.],
          [-65504., -65504., -65504., -65504., -65504.],
          [-65504., -65504., -65504., -65504., -65504.],
          [-65504., -65504., -65504., -65504., -65504.],
          [-65504., -65504., -65504., -65504., -65504.]],

         [[-65504., -65504., -65504., -65504., -65504.],
          [-65504., -65504., -65504., -65504., -65504.],
          [-65504., -65504., -65504., -65504., -65504.],
          [-65504., -65504., -65504., -65504., -65504.],
          [-65504., -65504., -65504., -65504., -65504.]],

         [[-65504., -65504., -65504., -65504., -65504.],
          [-65504., -65504., -65504., -65504., -65504.],
          [-65504., -65504., -65504., -65504., -65504.],
          [-65504., -65504., -65504., -65504., -65504.],
          [-65504., -65504., -65504., -65504., -65504.]],

         [[-65504., -65504., -65504., -65504., -65504.],
          [-65504., -65504., -65504., -65504., -65504.],
          [-65504., -65504., -65504., -65504., -65504.],
          [-65504., -65504., -65504., -65504., -65504.],
          [-65504., -65504., -65504., -65504., -65504.]],

         [[-65504., -65504., -65504., -65504., -65504.],
          [-65504., -65504., -65504., -65504., -65504.],
          [-65504., -65504., -65504., -65504., -65504.],
          [-65504., -65504., -65504., -65504., -65504.],
          [-65504., -65504., -65504., -65504., -65504.]],

         [[-65504., -65504., -65504., -65504., -65504.],
          [-65504., -65504., -65504., -65504., -65504.],
          [-65504., -65504., -65504., -65504., -65504.],
          [-65504., -65504., -65504., -65504., -65504.],
          [-65504., -65504., -65504., -65504., -65504.]],

         [[-65504., -65504., -65504., -65504., -65504.],
          [-65504., -65504., -65504., -65504., -65504.],
          [-65504., -65504., -65504., -65504., -65504.],
          [-65504., -65504., -65504., -65504., -65504.],
          [-65504., -65504., -65504., -65504., -65504.]],

         [[-65504., -65504., -65504., -65504., -65504.],
          [-65504., -65504., -65504., -65504., -65504.],
          [-65504., -65504., -65504., -65504., -65504.],
          [-65504., -65504., -65504., -65504., -65504.],
          [-65504., -65504., -65504., -65504., -65504.]],

         [[-65504., -65504., -65504., -65504., -65504.],
          [-65504., -65504., -65504., -65504., -65504.],
          [-65504., -65504., -65504., -65504., -65504.],
          [-65504., -65504., -65504., -65504., -65504.],
          [-65504., -65504., -65504., -65504., -65504.]],

         [[-65504., -65504., -65504., -65504., -65504.],
          [-65504., -65504., -65504., -65504., -65504.],
          [-65504., -65504., -65504., -65504., -65504.],
          [-65504., -65504., -65504., -65504., -65504.],
          [-65504., -65504., -65504., -65504., -65504.]],

         [[-65504., -65504., -65504., -65504., -65504.],
          [-65504., -65504., -65504., -65504., -65504.],
          [-65504., -65504., -65504., -65504., -65504.],
          [-65504., -65504., -65504., -65504., -65504.],
          [-65504., -65504., -65504., -65504., -65504.]],

         [[-65504., -65504., -65504., -65504., -65504.],
          [-65504., -65504., -65504., -65504., -65504.],
          [-65504., -65504., -65504., -65504., -65504.],
          [-65504., -65504., -65504., -65504., -65504.],
          [-65504., -65504., -65504., -65504., -65504.]],

         [[-65504., -65504., -65504., -65504., -65504.],
          [-65504., -65504., -65504., -65504., -65504.],
          [-65504., -65504., -65504., -65504., -65504.],
          [-65504., -65504., -65504., -65504., -65504.],
          [-65504., -65504., -65504., -65504., -65504.]],

         [[-65504., -65504., -65504., -65504., -65504.],
          [-65504., -65504., -65504., -65504., -65504.],
          [-65504., -65504., -65504., -65504., -65504.],
          [-65504., -65504., -65504., -65504., -65504.],
          [-65504., -65504., -65504., -65504., -65504.]],

         [[-65504., -65504., -65504., -65504., -65504.],
          [-65504., -65504., -65504., -65504., -65504.],
          [-65504., -65504., -65504., -65504., -65504.],
          [-65504., -65504., -65504., -65504., -65504.],
          [-65504., -65504., -65504., -65504., -65504.]],

         [[-65504., -65504., -65504., -65504., -65504.],
          [-65504., -65504., -65504., -65504., -65504.],
          [-65504., -65504., -65504., -65504., -65504.],
          [-65504., -65504., -65504., -65504., -65504.],
          [-65504., -65504., -65504., -65504., -65504.]],

         [[-65504., -65504., -65504., -65504., -65504.],
          [-65504., -65504., -65504., -65504., -65504.],
          [-65504., -65504., -65504., -65504., -65504.],
          [-65504., -65504., -65504., -65504., -65504.],
          [-65504., -65504., -65504., -65504., -65504.]]]],
       dtype=torch.float16, grad_fn=<MaskedFillBackward0>)
attention_probs.shape: torch.Size([1, 32, 5, 5])
attention_probs: tensor([[[[0.2000, 0.2000, 0.2000, 0.2000, 0.2000],
          [0.2000, 0.2000, 0.2000, 0.2000, 0.2000],
          [0.2000, 0.2000, 0.2000, 0.2000, 0.2000],
          [0.2000, 0.2000, 0.2000, 0.2000, 0.2000],
          [0.2000, 0.2000, 0.2000, 0.2000, 0.2000]],

         [[0.2000, 0.2000, 0.2000, 0.2000, 0.2000],
          [0.2000, 0.2000, 0.2000, 0.2000, 0.2000],
          [0.2000, 0.2000, 0.2000, 0.2000, 0.2000],
          [0.2000, 0.2000, 0.2000, 0.2000, 0.2000],
          [0.2000, 0.2000, 0.2000, 0.2000, 0.2000]],

         [[0.2000, 0.2000, 0.2000, 0.2000, 0.2000],
          [0.2000, 0.2000, 0.2000, 0.2000, 0.2000],
          [0.2000, 0.2000, 0.2000, 0.2000, 0.2000],
          [0.2000, 0.2000, 0.2000, 0.2000, 0.2000],
          [0.2000, 0.2000, 0.2000, 0.2000, 0.2000]],

         [[0.2000, 0.2000, 0.2000, 0.2000, 0.2000],
          [0.2000, 0.2000, 0.2000, 0.2000, 0.2000],
          [0.2000, 0.2000, 0.2000, 0.2000, 0.2000],
          [0.2000, 0.2000, 0.2000, 0.2000, 0.2000],
          [0.2000, 0.2000, 0.2000, 0.2000, 0.2000]],

         [[0.2000, 0.2000, 0.2000, 0.2000, 0.2000],
          [0.2000, 0.2000, 0.2000, 0.2000, 0.2000],
          [0.2000, 0.2000, 0.2000, 0.2000, 0.2000],
          [0.2000, 0.2000, 0.2000, 0.2000, 0.2000],
          [0.2000, 0.2000, 0.2000, 0.2000, 0.2000]],

         [[0.2000, 0.2000, 0.2000, 0.2000, 0.2000],
          [0.2000, 0.2000, 0.2000, 0.2000, 0.2000],
          [0.2000, 0.2000, 0.2000, 0.2000, 0.2000],
          [0.2000, 0.2000, 0.2000, 0.2000, 0.2000],
          [0.2000, 0.2000, 0.2000, 0.2000, 0.2000]],

         [[0.2000, 0.2000, 0.2000, 0.2000, 0.2000],
          [0.2000, 0.2000, 0.2000, 0.2000, 0.2000],
          [0.2000, 0.2000, 0.2000, 0.2000, 0.2000],
          [0.2000, 0.2000, 0.2000, 0.2000, 0.2000],
          [0.2000, 0.2000, 0.2000, 0.2000, 0.2000]],

         [[0.2000, 0.2000, 0.2000, 0.2000, 0.2000],
          [0.2000, 0.2000, 0.2000, 0.2000, 0.2000],
          [0.2000, 0.2000, 0.2000, 0.2000, 0.2000],
          [0.2000, 0.2000, 0.2000, 0.2000, 0.2000],
          [0.2000, 0.2000, 0.2000, 0.2000, 0.2000]],

         [[0.2000, 0.2000, 0.2000, 0.2000, 0.2000],
          [0.2000, 0.2000, 0.2000, 0.2000, 0.2000],
          [0.2000, 0.2000, 0.2000, 0.2000, 0.2000],
          [0.2000, 0.2000, 0.2000, 0.2000, 0.2000],
          [0.2000, 0.2000, 0.2000, 0.2000, 0.2000]],

         [[0.2000, 0.2000, 0.2000, 0.2000, 0.2000],
          [0.2000, 0.2000, 0.2000, 0.2000, 0.2000],
          [0.2000, 0.2000, 0.2000, 0.2000, 0.2000],
          [0.2000, 0.2000, 0.2000, 0.2000, 0.2000],
          [0.2000, 0.2000, 0.2000, 0.2000, 0.2000]],

         [[0.2000, 0.2000, 0.2000, 0.2000, 0.2000],
          [0.2000, 0.2000, 0.2000, 0.2000, 0.2000],
          [0.2000, 0.2000, 0.2000, 0.2000, 0.2000],
          [0.2000, 0.2000, 0.2000, 0.2000, 0.2000],
          [0.2000, 0.2000, 0.2000, 0.2000, 0.2000]],

         [[0.2000, 0.2000, 0.2000, 0.2000, 0.2000],
          [0.2000, 0.2000, 0.2000, 0.2000, 0.2000],
          [0.2000, 0.2000, 0.2000, 0.2000, 0.2000],
          [0.2000, 0.2000, 0.2000, 0.2000, 0.2000],
          [0.2000, 0.2000, 0.2000, 0.2000, 0.2000]],

         [[0.2000, 0.2000, 0.2000, 0.2000, 0.2000],
          [0.2000, 0.2000, 0.2000, 0.2000, 0.2000],
          [0.2000, 0.2000, 0.2000, 0.2000, 0.2000],
          [0.2000, 0.2000, 0.2000, 0.2000, 0.2000],
          [0.2000, 0.2000, 0.2000, 0.2000, 0.2000]],

         [[0.2000, 0.2000, 0.2000, 0.2000, 0.2000],
          [0.2000, 0.2000, 0.2000, 0.2000, 0.2000],
          [0.2000, 0.2000, 0.2000, 0.2000, 0.2000],
          [0.2000, 0.2000, 0.2000, 0.2000, 0.2000],
          [0.2000, 0.2000, 0.2000, 0.2000, 0.2000]],

         [[0.2000, 0.2000, 0.2000, 0.2000, 0.2000],
          [0.2000, 0.2000, 0.2000, 0.2000, 0.2000],
          [0.2000, 0.2000, 0.2000, 0.2000, 0.2000],
          [0.2000, 0.2000, 0.2000, 0.2000, 0.2000],
          [0.2000, 0.2000, 0.2000, 0.2000, 0.2000]],

         [[0.2000, 0.2000, 0.2000, 0.2000, 0.2000],
          [0.2000, 0.2000, 0.2000, 0.2000, 0.2000],
          [0.2000, 0.2000, 0.2000, 0.2000, 0.2000],
          [0.2000, 0.2000, 0.2000, 0.2000, 0.2000],
          [0.2000, 0.2000, 0.2000, 0.2000, 0.2000]],

         [[0.2000, 0.2000, 0.2000, 0.2000, 0.2000],
          [0.2000, 0.2000, 0.2000, 0.2000, 0.2000],
          [0.2000, 0.2000, 0.2000, 0.2000, 0.2000],
          [0.2000, 0.2000, 0.2000, 0.2000, 0.2000],
          [0.2000, 0.2000, 0.2000, 0.2000, 0.2000]],

         [[0.2000, 0.2000, 0.2000, 0.2000, 0.2000],
          [0.2000, 0.2000, 0.2000, 0.2000, 0.2000],
          [0.2000, 0.2000, 0.2000, 0.2000, 0.2000],
          [0.2000, 0.2000, 0.2000, 0.2000, 0.2000],
          [0.2000, 0.2000, 0.2000, 0.2000, 0.2000]],

         [[0.2000, 0.2000, 0.2000, 0.2000, 0.2000],
          [0.2000, 0.2000, 0.2000, 0.2000, 0.2000],
          [0.2000, 0.2000, 0.2000, 0.2000, 0.2000],
          [0.2000, 0.2000, 0.2000, 0.2000, 0.2000],
          [0.2000, 0.2000, 0.2000, 0.2000, 0.2000]],

         [[0.2000, 0.2000, 0.2000, 0.2000, 0.2000],
          [0.2000, 0.2000, 0.2000, 0.2000, 0.2000],
          [0.2000, 0.2000, 0.2000, 0.2000, 0.2000],
          [0.2000, 0.2000, 0.2000, 0.2000, 0.2000],
          [0.2000, 0.2000, 0.2000, 0.2000, 0.2000]],

         [[0.2000, 0.2000, 0.2000, 0.2000, 0.2000],
          [0.2000, 0.2000, 0.2000, 0.2000, 0.2000],
          [0.2000, 0.2000, 0.2000, 0.2000, 0.2000],
          [0.2000, 0.2000, 0.2000, 0.2000, 0.2000],
          [0.2000, 0.2000, 0.2000, 0.2000, 0.2000]],

         [[0.2000, 0.2000, 0.2000, 0.2000, 0.2000],
          [0.2000, 0.2000, 0.2000, 0.2000, 0.2000],
          [0.2000, 0.2000, 0.2000, 0.2000, 0.2000],
          [0.2000, 0.2000, 0.2000, 0.2000, 0.2000],
          [0.2000, 0.2000, 0.2000, 0.2000, 0.2000]],

         [[0.2000, 0.2000, 0.2000, 0.2000, 0.2000],
          [0.2000, 0.2000, 0.2000, 0.2000, 0.2000],
          [0.2000, 0.2000, 0.2000, 0.2000, 0.2000],
          [0.2000, 0.2000, 0.2000, 0.2000, 0.2000],
          [0.2000, 0.2000, 0.2000, 0.2000, 0.2000]],

         [[0.2000, 0.2000, 0.2000, 0.2000, 0.2000],
          [0.2000, 0.2000, 0.2000, 0.2000, 0.2000],
          [0.2000, 0.2000, 0.2000, 0.2000, 0.2000],
          [0.2000, 0.2000, 0.2000, 0.2000, 0.2000],
          [0.2000, 0.2000, 0.2000, 0.2000, 0.2000]],

         [[0.2000, 0.2000, 0.2000, 0.2000, 0.2000],
          [0.2000, 0.2000, 0.2000, 0.2000, 0.2000],
          [0.2000, 0.2000, 0.2000, 0.2000, 0.2000],
          [0.2000, 0.2000, 0.2000, 0.2000, 0.2000],
          [0.2000, 0.2000, 0.2000, 0.2000, 0.2000]],

         [[0.2000, 0.2000, 0.2000, 0.2000, 0.2000],
          [0.2000, 0.2000, 0.2000, 0.2000, 0.2000],
          [0.2000, 0.2000, 0.2000, 0.2000, 0.2000],
          [0.2000, 0.2000, 0.2000, 0.2000, 0.2000],
          [0.2000, 0.2000, 0.2000, 0.2000, 0.2000]],

         [[0.2000, 0.2000, 0.2000, 0.2000, 0.2000],
          [0.2000, 0.2000, 0.2000, 0.2000, 0.2000],
          [0.2000, 0.2000, 0.2000, 0.2000, 0.2000],
          [0.2000, 0.2000, 0.2000, 0.2000, 0.2000],
          [0.2000, 0.2000, 0.2000, 0.2000, 0.2000]],

         [[0.2000, 0.2000, 0.2000, 0.2000, 0.2000],
          [0.2000, 0.2000, 0.2000, 0.2000, 0.2000],
          [0.2000, 0.2000, 0.2000, 0.2000, 0.2000],
          [0.2000, 0.2000, 0.2000, 0.2000, 0.2000],
          [0.2000, 0.2000, 0.2000, 0.2000, 0.2000]],

         [[0.2000, 0.2000, 0.2000, 0.2000, 0.2000],
          [0.2000, 0.2000, 0.2000, 0.2000, 0.2000],
          [0.2000, 0.2000, 0.2000, 0.2000, 0.2000],
          [0.2000, 0.2000, 0.2000, 0.2000, 0.2000],
          [0.2000, 0.2000, 0.2000, 0.2000, 0.2000]],

         [[0.2000, 0.2000, 0.2000, 0.2000, 0.2000],
          [0.2000, 0.2000, 0.2000, 0.2000, 0.2000],
          [0.2000, 0.2000, 0.2000, 0.2000, 0.2000],
          [0.2000, 0.2000, 0.2000, 0.2000, 0.2000],
          [0.2000, 0.2000, 0.2000, 0.2000, 0.2000]],

         [[0.2000, 0.2000, 0.2000, 0.2000, 0.2000],
          [0.2000, 0.2000, 0.2000, 0.2000, 0.2000],
          [0.2000, 0.2000, 0.2000, 0.2000, 0.2000],
          [0.2000, 0.2000, 0.2000, 0.2000, 0.2000],
          [0.2000, 0.2000, 0.2000, 0.2000, 0.2000]],

         [[0.2000, 0.2000, 0.2000, 0.2000, 0.2000],
          [0.2000, 0.2000, 0.2000, 0.2000, 0.2000],
          [0.2000, 0.2000, 0.2000, 0.2000, 0.2000],
          [0.2000, 0.2000, 0.2000, 0.2000, 0.2000],
          [0.2000, 0.2000, 0.2000, 0.2000, 0.2000]]]], dtype=torch.float16,
       grad_fn=<SoftmaxBackward0>)
value_layer.shape: torch.Size([5, 32, 160])
value_layer: tensor([[[-1.0147e-03,  1.1670e-01, -1.9250e-01,  ..., -7.9736e-01,
          -1.8884e-01,  7.2754e-01],
         [-3.4839e-01,  4.2627e-01, -1.2910e+00,  ...,  6.4062e-01,
          -1.0225e+00,  1.7664e-01],
         [-2.7539e-01, -8.4277e-01,  7.5928e-01,  ...,  4.8682e-01,
          -7.9980e-01,  2.1777e-01],
         ...,
         [ 1.9482e-01,  4.7119e-01, -8.9209e-01,  ..., -1.6632e-02,
          -4.4092e-01, -7.5928e-02],
         [ 4.3799e-01,  4.1895e-01,  1.8152e-01,  ...,  1.4482e+00,
          -8.1152e-01,  1.0723e+00],
         [ 4.9512e-01, -9.8096e-01,  1.0785e-01,  ...,  2.0483e-01,
          -1.0713e+00, -6.1963e-01]],

        [[-1.0147e-03,  1.1670e-01, -1.9250e-01,  ..., -7.9736e-01,
          -1.8884e-01,  7.2754e-01],
         [-3.4839e-01,  4.2627e-01, -1.2910e+00,  ...,  6.4062e-01,
          -1.0225e+00,  1.7664e-01],
         [-2.7539e-01, -8.4277e-01,  7.5928e-01,  ...,  4.8682e-01,
          -7.9980e-01,  2.1777e-01],
         ...,
         [ 1.9482e-01,  4.7119e-01, -8.9209e-01,  ..., -1.6632e-02,
          -4.4092e-01, -7.5928e-02],
         [ 4.3799e-01,  4.1895e-01,  1.8152e-01,  ...,  1.4482e+00,
          -8.1152e-01,  1.0723e+00],
         [ 4.9512e-01, -9.8096e-01,  1.0785e-01,  ...,  2.0483e-01,
          -1.0713e+00, -6.1963e-01]],

        [[-1.0147e-03,  1.1670e-01, -1.9250e-01,  ..., -7.9736e-01,
          -1.8884e-01,  7.2754e-01],
         [-3.4839e-01,  4.2627e-01, -1.2910e+00,  ...,  6.4062e-01,
          -1.0225e+00,  1.7664e-01],
         [-2.7539e-01, -8.4277e-01,  7.5928e-01,  ...,  4.8682e-01,
          -7.9980e-01,  2.1777e-01],
         ...,
         [ 1.9482e-01,  4.7119e-01, -8.9209e-01,  ..., -1.6632e-02,
          -4.4092e-01, -7.5928e-02],
         [ 4.3799e-01,  4.1895e-01,  1.8152e-01,  ...,  1.4482e+00,
          -8.1152e-01,  1.0723e+00],
         [ 4.9512e-01, -9.8096e-01,  1.0785e-01,  ...,  2.0483e-01,
          -1.0713e+00, -6.1963e-01]],

        [[-1.0147e-03,  1.1670e-01, -1.9250e-01,  ..., -7.9736e-01,
          -1.8884e-01,  7.2754e-01],
         [-3.4839e-01,  4.2627e-01, -1.2910e+00,  ...,  6.4062e-01,
          -1.0225e+00,  1.7664e-01],
         [-2.7539e-01, -8.4277e-01,  7.5928e-01,  ...,  4.8682e-01,
          -7.9980e-01,  2.1777e-01],
         ...,
         [ 1.9482e-01,  4.7119e-01, -8.9209e-01,  ..., -1.6632e-02,
          -4.4092e-01, -7.5928e-02],
         [ 4.3799e-01,  4.1895e-01,  1.8152e-01,  ...,  1.4482e+00,
          -8.1152e-01,  1.0723e+00],
         [ 4.9512e-01, -9.8096e-01,  1.0785e-01,  ...,  2.0483e-01,
          -1.0713e+00, -6.1963e-01]],

        [[-1.0147e-03,  1.1670e-01, -1.9250e-01,  ..., -7.9736e-01,
          -1.8884e-01,  7.2754e-01],
         [-3.4839e-01,  4.2627e-01, -1.2910e+00,  ...,  6.4062e-01,
          -1.0225e+00,  1.7664e-01],
         [-2.7539e-01, -8.4277e-01,  7.5928e-01,  ...,  4.8682e-01,
          -7.9980e-01,  2.1777e-01],
         ...,
         [ 1.9482e-01,  4.7119e-01, -8.9209e-01,  ..., -1.6632e-02,
          -4.4092e-01, -7.5928e-02],
         [ 4.3799e-01,  4.1895e-01,  1.8152e-01,  ...,  1.4482e+00,
          -8.1152e-01,  1.0723e+00],
         [ 4.9512e-01, -9.8096e-01,  1.0785e-01,  ...,  2.0483e-01,
          -1.0713e+00, -6.1963e-01]]], dtype=torch.float16,
       grad_fn=<ReshapeAliasBackward0>)
context_layer.shape: torch.Size([32, 5, 160])
context_layer: tensor([[[-1.0147e-03,  1.1670e-01, -1.9250e-01,  ..., -7.9736e-01,
          -1.8884e-01,  7.2754e-01],
         [-1.0147e-03,  1.1670e-01, -1.9250e-01,  ..., -7.9736e-01,
          -1.8884e-01,  7.2754e-01],
         [-1.0147e-03,  1.1670e-01, -1.9250e-01,  ..., -7.9736e-01,
          -1.8884e-01,  7.2754e-01],
         [-1.0147e-03,  1.1670e-01, -1.9250e-01,  ..., -7.9736e-01,
          -1.8884e-01,  7.2754e-01],
         [-1.0147e-03,  1.1670e-01, -1.9250e-01,  ..., -7.9736e-01,
          -1.8884e-01,  7.2754e-01]],

        [[-3.4839e-01,  4.2627e-01, -1.2910e+00,  ...,  6.4062e-01,
          -1.0225e+00,  1.7664e-01],
         [-3.4839e-01,  4.2627e-01, -1.2910e+00,  ...,  6.4062e-01,
          -1.0225e+00,  1.7664e-01],
         [-3.4839e-01,  4.2627e-01, -1.2910e+00,  ...,  6.4062e-01,
          -1.0225e+00,  1.7664e-01],
         [-3.4839e-01,  4.2627e-01, -1.2910e+00,  ...,  6.4062e-01,
          -1.0225e+00,  1.7664e-01],
         [-3.4839e-01,  4.2627e-01, -1.2910e+00,  ...,  6.4062e-01,
          -1.0225e+00,  1.7664e-01]],

        [[-2.7539e-01, -8.4277e-01,  7.5928e-01,  ...,  4.8682e-01,
          -7.9980e-01,  2.1777e-01],
         [-2.7539e-01, -8.4277e-01,  7.5928e-01,  ...,  4.8682e-01,
          -7.9980e-01,  2.1777e-01],
         [-2.7539e-01, -8.4277e-01,  7.5928e-01,  ...,  4.8682e-01,
          -7.9980e-01,  2.1777e-01],
         [-2.7539e-01, -8.4277e-01,  7.5928e-01,  ...,  4.8682e-01,
          -7.9980e-01,  2.1777e-01],
         [-2.7539e-01, -8.4277e-01,  7.5928e-01,  ...,  4.8682e-01,
          -7.9980e-01,  2.1777e-01]],

        ...,

        [[ 1.9482e-01,  4.7119e-01, -8.9209e-01,  ..., -1.6632e-02,
          -4.4092e-01, -7.5928e-02],
         [ 1.9482e-01,  4.7119e-01, -8.9209e-01,  ..., -1.6632e-02,
          -4.4092e-01, -7.5928e-02],
         [ 1.9482e-01,  4.7119e-01, -8.9209e-01,  ..., -1.6632e-02,
          -4.4092e-01, -7.5928e-02],
         [ 1.9482e-01,  4.7119e-01, -8.9209e-01,  ..., -1.6632e-02,
          -4.4092e-01, -7.5928e-02],
         [ 1.9482e-01,  4.7119e-01, -8.9209e-01,  ..., -1.6632e-02,
          -4.4092e-01, -7.5928e-02]],

        [[ 4.3799e-01,  4.1895e-01,  1.8152e-01,  ...,  1.4482e+00,
          -8.1152e-01,  1.0723e+00],
         [ 4.3799e-01,  4.1895e-01,  1.8152e-01,  ...,  1.4482e+00,
          -8.1152e-01,  1.0723e+00],
         [ 4.3799e-01,  4.1895e-01,  1.8152e-01,  ...,  1.4482e+00,
          -8.1152e-01,  1.0723e+00],
         [ 4.3799e-01,  4.1895e-01,  1.8152e-01,  ...,  1.4482e+00,
          -8.1152e-01,  1.0723e+00],
         [ 4.3799e-01,  4.1895e-01,  1.8152e-01,  ...,  1.4482e+00,
          -8.1152e-01,  1.0723e+00]],

        [[ 4.9512e-01, -9.8096e-01,  1.0785e-01,  ...,  2.0483e-01,
          -1.0713e+00, -6.1963e-01],
         [ 4.9512e-01, -9.8096e-01,  1.0785e-01,  ...,  2.0483e-01,
          -1.0713e+00, -6.1963e-01],
         [ 4.9512e-01, -9.8096e-01,  1.0785e-01,  ...,  2.0483e-01,
          -1.0713e+00, -6.1963e-01],
         [ 4.9512e-01, -9.8096e-01,  1.0785e-01,  ...,  2.0483e-01,
          -1.0713e+00, -6.1963e-01],
         [ 4.9512e-01, -9.8096e-01,  1.0785e-01,  ...,  2.0483e-01,
          -1.0713e+00, -6.1963e-01]]], dtype=torch.float16,
       grad_fn=<BmmBackward0>)
output_tensor.shape: torch.Size([1, 5, 5120])
output_tensor: tensor([[[1.2656, 1.6309, 0.7646,  ..., 1.0635, 1.4082, 0.7554],
         [1.2656, 1.6309, 0.7646,  ..., 1.0635, 1.4082, 0.7554],
         [1.2656, 1.6309, 0.7646,  ..., 1.0635, 1.4082, 0.7554],
         [1.2656, 1.6309, 0.7646,  ..., 1.0635, 1.4082, 0.7554],
         [1.2656, 1.6309, 0.7646,  ..., 1.0635, 1.4082, 0.7554]]],
       dtype=torch.float16, grad_fn=<AddBackward0>)
